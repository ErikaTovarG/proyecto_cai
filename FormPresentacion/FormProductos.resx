<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        M6GXrN8AAAAASUVORK5CYII=
</value>
  </data>
</root>